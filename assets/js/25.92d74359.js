(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{611:function(t,a,s){t.exports=s.p+"assets/img/html-1.d7baca60.png"},659:function(t,a,s){"use strict";s.r(a);var n=s(15),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"行内元素定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#行内元素定义"}},[t._v("#")]),t._v(" 行内元素定义")]),t._v(" "),n("ul",[n("li",[t._v("一个行内元素只占据它对应标签的边框所包含的空间。")]),t._v(" "),n("li",[t._v("a  span img strong sub sup button input label select textarea")])]),t._v(" "),n("h2",{attrs:{id:"块级元素定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#块级元素定义"}},[t._v("#")]),t._v(" 块级元素定义")]),t._v(" "),n("ul",[n("li",[t._v("块级元素占据其父元素（容器）的整个宽度")]),t._v(" "),n("li",[t._v("div ul ol li dl dt dd h1 h2 h3 h4 h5 h6 p")])]),t._v(" "),n("h2",{attrs:{id:"行内元素与块级元素的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#行内元素与块级元素的区别"}},[t._v("#")]),t._v(" 行内元素与块级元素的区别？")]),t._v(" "),n("ul",[n("li",[t._v("格式上，默认情况下，行内元素不会以新行开始，而块级元素会新起一行。")]),t._v(" "),n("li",[t._v("内容上，默认情况下，行内元素只能包含文本和其他行内元素。而块级元素可以包含行内元素和其他块级元素。")]),t._v(" "),n("li",[t._v("行内元素与块级元素属性的不同，主要是盒模型属性上：行内元素设置 width 无效，height 无效（可以设置 line-hei\nght），设置 margin 和 padding 的上下不会对其他元素产生影响。(p标签内嵌套div标签会被分成两个p标签)")])]),t._v(" "),n("h2",{attrs:{id:"空元素定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#空元素定义"}},[t._v("#")]),t._v(" 空元素定义")]),t._v(" "),n("ul",[n("li",[t._v("没有内容的 HTML 标签被称为空元素。空元素是在开始标签中关闭的。(自闭和标签)")]),t._v(" "),n("li",[t._v("br hr img input link meta")])]),t._v(" "),n("h2",{attrs:{id:"link-标签定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#link-标签定义"}},[t._v("#")]),t._v(" link 标签定义")]),t._v(" "),n("ul",[n("li",[t._v("link 标签定义文档与外部资源的关系。")]),t._v(" "),n("li",[t._v("link 元素是空元素，它仅包含属性。 此元素只能存在于 head 部分，不过它可出现任何次数。")]),t._v(" "),n("li",[t._v("link 标签中的 rel 属性定义了当前文档与被链接文档之间的关系。常见的 stylesheet 指的是定义一个外部加载的样式表。")])]),t._v(" "),n("h2",{attrs:{id:"页面导入样式时-使用-link-和-import-有什么区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#页面导入样式时-使用-link-和-import-有什么区别"}},[t._v("#")]),t._v(" 页面导入样式时，使用 link 和 @import 有什么区别？")]),t._v(" "),n("ul",[n("li",[t._v("从属关系区别。 @import 是 CSS 提供的语法规则，只有导入样式表的作用；link 是 HTML 提供的标签，不仅可以加\n载 CSS 文件，还可以定义 RSS、rel 连接属性、引入网站图标等。")]),t._v(" "),n("li",[t._v("加载顺序区别。加载页面时，link 标签引入的 CSS 被同时加载；@import 引入的 CSS 将在页面加载完毕后被加载。")]),t._v(" "),n("li",[t._v("兼容性区别。@import 是 CSS2.1 才有的语法，故只可在 IE5+ 才能识别；link 标签作为 HTML 元素，不存在兼容\n性问题。")]),t._v(" "),n("li",[t._v("DOM 可控性区别。可以通过 JS 操作 DOM ，插入 link 标签来改变样式；由于 DOM 方法是基于文档的，无法使用 @i\nmport 的方式插入样式。")])]),t._v(" "),n("h2",{attrs:{id:"浏览器内核的理解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核的理解"}},[t._v("#")]),t._v(" 浏览器内核的理解？")]),t._v(" "),n("ul",[n("li",[t._v("主要分成两部分：渲染引擎和 JS 引擎。")]),t._v(" "),n("li",[t._v("渲染引擎的职责就是渲染，即在浏览器窗口中显示所请求的内容。")]),t._v(" "),n("li",[t._v("JS 引擎：解析和执行 JavaScript 来实现网页的动态效果。")])]),t._v(" "),n("h2",{attrs:{id:"浏览器的渲染原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的渲染原理"}},[t._v("#")]),t._v(" 浏览器的渲染原理？")]),t._v(" "),n("ul",[n("li",[t._v("首先解析收到的文档，根据文档定义构建一棵 DOM 树，DOM 树是由 DOM 元素及属性节点组成的。")]),t._v(" "),n("li",[t._v("然后对 CSS 进行解析，生成 CSSOM 规则树。")]),t._v(" "),n("li",[t._v("根据 DOM 树和 CSSOM 规则树构建渲染树。渲染树的节点被称为渲染对象，渲染对象是一个包含有颜色和大小等属性的矩\n形，渲染对象和 DOM 元素相对应，但这种对应关系不是一对一的，不可见的 DOM 元素不会被插入渲染树。还有一些 DOM\n元素对应几个可见对象，它们一般是一些具有复杂结构的元素，无法用一个矩形来描述。")]),t._v(" "),n("li",[t._v("当渲染对象被创建并添加到树中，它们并没有位置和大小，所以当浏览器生成渲染树以后，就会根据渲染树来进行布局（也\n可以叫做回流）。这一阶段浏览器要做的事情是要弄清楚各个节点在页面中的确切位置和大小。通常这一行为也被称为“自动\n重排”。")]),t._v(" "),n("li",[t._v("布局阶段结束后是绘制阶段，遍历渲染树并调用渲染对象的 paint 方法将它们的内容显示在屏幕上，绘制使用 UI 基础组\n件。")]),t._v(" "),n("li",[t._v("值得注意的是，这个过程是逐步完成的，为了更好的用户体验，渲染引擎将会尽可能早的将内容呈现到屏幕上，并不会等到所有的\nhtml 都解析完成之后再去构建和布局 render 树。它是解析完一部分内容就显示一部分内容，同时，可能还在通过网络下载其\n余内容。")])]),t._v(" "),n("h2",{attrs:{id:"渲染过程中遇到-js-文件怎么处理-浏览器解析过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程中遇到-js-文件怎么处理-浏览器解析过程"}},[t._v("#")]),t._v(" 渲染过程中遇到 JS 文件怎么处理？（浏览器解析过程）")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("JavaScript 的加载、解析与执行会阻塞文档的解析，也就是说，在构建 DOM 时，HTML 解析器若遇到了 JavaScript，那么\n它会暂停文档的解析，将控制权移交给 JavaScript 引擎，等 JavaScript 引擎运行完毕，浏览器再从中断的地方恢复继续解\n析文档。")])]),t._v(" "),n("li",[n("p",[t._v("如果想首屏渲染的越快，就越不应该在首屏就加载 JS 文件，这也是都建议将 script 标签放在 body 标签底部的\n原因。当然在当下，并不是说 script 标签必须放在底部，因为你可以给 script 标签添加 defer 或者 async 属性。")])])]),t._v(" "),n("h2",{attrs:{id:"async-和-defer-的作用是什么-有什么区别-浏览器解析过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#async-和-defer-的作用是什么-有什么区别-浏览器解析过程"}},[t._v("#")]),t._v(" async 和 defer 的作用是什么？有什么区别？（浏览器解析过程）")]),t._v(" "),n("ul",[n("li",[t._v("脚本没有 defer 或 async，浏览器会立即加载并执行指定的脚本，也就是说不等待后续载入的文档元素，读到就加载并执\n行。")]),t._v(" "),n("li",[t._v("defer 属性表示延迟执行引入的 JavaScript，即这段 JavaScript 加载时 HTML 并未停止解析，这两个过程是并行的。\n当整个 document 解析完毕后再执行脚本文件，在 DOMContentLoaded 事件触发之前完成。多个脚本按顺序执行。")]),t._v(" "),n("li",[t._v("async 属性表示异步执行引入的 JavaScript，与 defer 的区别在于，如果已经加载好，就会开始执行，也就是说它的执\n行仍然会阻塞文档的解析，只是它的加载过程不会阻塞。多个脚本的执行顺序无法保证。\n"),n("img",{attrs:{src:s(611)}})])]),t._v(" "),n("h2",{attrs:{id:"什么是重绘和回流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是重绘和回流"}},[t._v("#")]),t._v(" 什么是重绘和回流？")]),t._v(" "),n("ul",[n("li",[t._v("重绘: 当渲染树中的一些元素需要更新属性，而这些属性只是影响元素的外观、风格，而不会影响布局的操作，比如 background\n-color，我们将这样的操作称为重绘。")]),t._v(" "),n("li",[t._v("回流：当渲染树中的一部分（或全部）因为元素的规模尺寸、布局、隐藏等改变而需要重新构建的操作，会影响到布局的操作，这样\n的操作我们称为回流。")]),t._v(" "),n("li",[t._v("任何会改变元素几何信息（元素的位置和尺寸大小）的操作，都会触发回流。\n"),n("ul",[n("li",[t._v("添加或者删除可见的 DOM 元素；")]),t._v(" "),n("li",[t._v("元素尺寸改变——边距、填充、边框、宽度和高度")]),t._v(" "),n("li",[t._v("内容变化，比如用户在 input 框中输入文字")]),t._v(" "),n("li",[t._v("浏览器窗口尺寸改变——resize事件发生时")]),t._v(" "),n("li",[t._v("计算 offsetWidth 和 offsetHeight 属性")]),t._v(" "),n("li",[t._v("设置 style 属性的值")]),t._v(" "),n("li",[t._v("当你修改网页的默认字体时。")])])]),t._v(" "),n("li",[t._v("回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变父节点里的子节点很可能会导致父节点的一系列\n回流。")])]),t._v(" "),n("h2",{attrs:{id:"domcontentloaded-事件和-load-事件的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded-事件和-load-事件的区别"}},[t._v("#")]),t._v(" DOMContentLoaded 事件和 Load 事件的区别？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("当初始的 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，而无需等待样式表、图像和\n子框架的加载完成。")])]),t._v(" "),n("li",[n("p",[t._v("Load 事件是当所有资源加载完成后触发的。")])]),t._v(" "),n("li",[n("p",[t._v("解析HTML结构。")])]),t._v(" "),n("li",[n("p",[t._v("加载外部脚本和样式表文件。")])]),t._v(" "),n("li",[n("p",[t._v("解析并执行脚本代码。// 部分脚本会阻塞页面的加载")])]),t._v(" "),n("li",[n("p",[t._v("DOM树构建完成。//DOMContentLoaded 事件")])]),t._v(" "),n("li",[n("p",[t._v("加载图片等外部文件。")])]),t._v(" "),n("li",[n("p",[t._v("页面加载完毕。//load 事件")])])]),t._v(" "),n("h2",{attrs:{id:"html5-有哪些新特性、移除了那些元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html5-有哪些新特性、移除了那些元素"}},[t._v("#")]),t._v(" HTML5 有哪些新特性、移除了那些元素？")]),t._v(" "),n("ul",[n("li",[t._v("新增的有：\n"),n("ul",[n("li",[t._v("绘画 canvas;")]),t._v(" "),n("li",[t._v("用于媒介回放的 video 和 audio 元素;")]),t._v(" "),n("li",[t._v("本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;")]),t._v(" "),n("li",[t._v("sessionStorage 的数据在浏览器关闭后自动删除;")]),t._v(" "),n("li",[t._v("语意化更好的内容元素，比如 article、footer、header、nav、section;")]),t._v(" "),n("li",[t._v("表单控件，calendar、date、time、email、url、search;")]),t._v(" "),n("li",[t._v("新的技术 webworker, websocket;")]),t._v(" "),n("li",[t._v("新的文档属性 document.visibilityState")])])]),t._v(" "),n("li",[t._v("移除的元素有：\n"),n("ul",[n("li",[t._v("纯表现的元素：basefont，big，center，font, s，strike，tt，u;")]),t._v(" "),n("li",[t._v("对可用性产生负面影响的元素：frame，frameset，noframes；")])])])]),t._v(" "),n("h2",{attrs:{id:"html-语义化的理解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-语义化的理解"}},[t._v("#")]),t._v(" HTML 语义化的理解？")]),t._v(" "),n("ul",[n("li",[t._v("用正确的标签做正确的事情。")]),t._v(" "),n("li",[t._v("html 语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;")]),t._v(" "),n("li",[t._v("即使在没有样式 CSS 情况下也以一种文档格式显示，并且是容易阅读的;")]),t._v(" "),n("li",[t._v("搜索引擎的爬虫也依赖于 HTML 标记来确定上下文和各个关键字的权重，利于 SEO ;")]),t._v(" "),n("li",[t._v("使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。")])]),t._v(" "),n("h2",{attrs:{id:"前端需要注意哪些-seo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端需要注意哪些-seo"}},[t._v("#")]),t._v(" 前端需要注意哪些 SEO ？")]),t._v(" "),n("ul",[n("li",[t._v("合理的 title、description、keywords：搜索对着三项的权重逐个减小，title 值强调重点即可，重要关键词出现不要超\n过2次，而且要靠前，不同页面 title 要有所不同；description 把页面内容高度概括，长度合适，不可过分堆砌关键词，不\n同页面 description 有所不同；keywords 列举出重要关键词即可。")]),t._v(" "),n("li",[t._v("语义化的 HTML 代码，符合 W3C 规范：语义化代码让搜索引擎容易理解网页。")]),t._v(" "),n("li",[t._v("重要内容 HTML 代码放在最前：搜索引擎抓取 HTML 顺序是从上到下，有的搜索引擎对抓取长度有限制，保证重要内容肯定被\n抓取。")]),t._v(" "),n("li",[t._v("重要内容不要用 js 输出：爬虫不会执行 js 获取内容")]),t._v(" "),n("li",[t._v("少用 iframe：搜索引擎不会抓取 iframe 中的内容")]),t._v(" "),n("li",[t._v("非装饰性图片必须加 alt")]),t._v(" "),n("li",[t._v("提高网站速度：网站速度是搜索引擎排序的一个重要指标")])]),t._v(" "),n("h2",{attrs:{id:"cookies-sessionstorage-和-localstorage-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cookies-sessionstorage-和-localstorage-的区别"}},[t._v("#")]),t._v(" cookies，sessionStorage 和 localStorage 的区别？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("SessionStorage， LocalStorage， Cookie 这三者都可以被用来在浏览器端存储数据，而且都是字符串类型的键值对。区别\n在于前两者属于 HTML5 WebStorage，创建它们的目的便于客户端存储数据。而 cookie 是网站为了标示用户身份而储存在用户\n本地终端上的数据（通常经过加密）。cookie 数据始终在同源（协议、主机、端口相同）的 http 请求中携带（即使不需要），会\n在浏览器和服务器间来回传递。")])]),t._v(" "),n("li",[n("p",[t._v("存储大小：")]),t._v(" "),n("ul",[n("li",[t._v("cookie 数据大小不能超过4 k 。")]),t._v(" "),n("li",[t._v("sessionStorage 和 localStorage 虽然也有存储大小的限制，但比 cookie 大得多，可以达到 5M 或更大。")])])]),t._v(" "),n("li",[n("p",[t._v("有期时间：")]),t._v(" "),n("ul",[n("li",[t._v("localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据。")]),t._v(" "),n("li",[t._v("sessionStorage  数据在页面会话结束时会被清除。页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会\n保持原来的页面会话。在新标签或窗口打开一个页面时会在顶级浏览上下文中初始化一个新的会话。")]),t._v(" "),n("li",[t._v("cookie          设置的 cookie 过期时间之前一直有效，即使窗口或浏览器关闭。")])])]),t._v(" "),n("li",[n("p",[t._v("作用域：")]),t._v(" "),n("ul",[n("li",[t._v("sessionStorage  只在同源的同窗口（或标签页）中共享数据，也就是只在当前会话中共享。")]),t._v(" "),n("li",[t._v("localStorage    在所有同源窗口中都是共享的。")]),t._v(" "),n("li",[t._v("cookie          在所有同源窗口中都是共享的。")])])])]),t._v(" "),n("h2",{attrs:{id:"的-title-和-alt-有什么区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#的-title-和-alt-有什么区别"}},[t._v("#")]),t._v(" "),n("img"),t._v(" 的 title 和 alt 有什么区别？")]),t._v(" "),n("ul",[n("li",[t._v("title 通常当鼠标滑动到元素上的时候显示")]),t._v(" "),n("li",[t._v("alt 是 "),n("code",[t._v("img")]),t._v(" 的特有属性，是图片内容的等价描述，用于图片无法加载时显示、读屏器阅读图片。可提图片高可访问性，除了纯装\n饰图片外都必须设置有意义的值，搜索引擎会重点分析。")])]),t._v(" "),n("h2",{attrs:{id:"常用的-meta-标签"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用的-meta-标签"}},[t._v("#")]),t._v(" 常用的 meta 标签")]),t._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v(" "),n("span",{pre:!0,attrs:{class:"token doctype"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),n("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  H5标准声明，使用 HTML5 doctype，不区分大小写\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("en"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 标准的 lang 属性写法\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("    声明文档使用的字符编码\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("X-UA-Compatible"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("IE=edge,chrome=1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("   优先使用 IE 最新版本和 Chrome\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("description"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("不超过150个字符"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("       页面描述\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("keywords"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("      页面关键词\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("author"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name, email@gmail.com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("    网页作者\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 为移动设备添加 viewport\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 定义文档的标题，它是 head 部分中唯一必需的元素。\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h2",{attrs:{id:"前端性能优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化"}},[t._v("#")]),t._v(" 前端性能优化？")]),t._v(" "),n("ul",[n("li",[t._v("前端性能优化主要是为了提高页面的加载速度，优化用户的访问体验。")]),t._v(" "),n("li",[t._v("页面的内容方面\n"),n("ul",[n("li",[t._v("通过文件合并、css 雪碧图、使用 base64 等方式来减少 HTTP 请求数，避免过多的请求造成等待的情况。")]),t._v(" "),n("li",[t._v("通过 DNS 缓存等机制来减少 DNS 的查询次数。")]),t._v(" "),n("li",[t._v("通过设置缓存策略，对常用不变的资源进行缓存。")]),t._v(" "),n("li",[t._v("使用延迟加载的方式，来减少页面首屏加载时需要请求的资源。延迟加载的资源当用户需要访问时，再去请求加载。")]),t._v(" "),n("li",[t._v("通过用户行为，对某些资源使用预加载的方式，来提高用户需要访问资源时的响应速度")])])]),t._v(" "),n("li",[t._v("服务器方面\n"),n("ul",[n("li",[t._v("使用 CDN 服务，来提高用户对于资源请求时的响应速度。")]),t._v(" "),n("li",[t._v("服务器端启用 Gzip、Deflate 等方式对于传输的资源进行压缩，减小文件的体积。")]),t._v(" "),n("li",[t._v("尽可能减小 cookie 的大小，并且通过将静态资源分配到其他域名下，来避免对静态资源请求时携带不必要的 cookie")])])]),t._v(" "),n("li",[t._v("CSS 和 JavaScript 方面\n"),n("ul",[n("li",[t._v("把样式表放在页面的 head 标签中，减少页面的首次渲染的时间。")]),t._v(" "),n("li",[t._v("避免使用 @import 标签。")]),t._v(" "),n("li",[t._v("尽量把 js 脚本放在页面底部或者使用 defer 或 async 属性，避免脚本的加载和执行阻塞页面的渲染。")]),t._v(" "),n("li",[t._v("通过对 JavaScript 和 CSS 的文件进行压缩，来减小文件的体积")])])])]),t._v(" "),n("h2",{attrs:{id:"html-规范中为什么要求引用资源不加协议头http或者https"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-规范中为什么要求引用资源不加协议头http或者https"}},[t._v("#")]),t._v(" Html 规范中为什么要求引用资源不加协议头http或者https？")]),t._v(" "),n("ul",[n("li",[t._v("如果用户当前访问的页面是通过 HTTPS 协议来浏览的，那么网页中的资源也只能通过 HTTPS 协议来引用，否则浏览器会出现\n警告信息，不同浏览器警告信息展现形式不同。")]),t._v(" "),n("li",[t._v("为了解决这个问题，可以省略 URL 的协议声明，省略后浏览器照样可以正常引用相应的资源，这项解决方案称为\nprotocol-relative URL，可译作协议相对 URL。")]),t._v(" "),n("li",[t._v("如果使用协议相对 URL，无论是使用 HTTPS，还是 HTTP 访问页面，浏览器都会以相同的协议请求页面中的资源，避免弹出类似\n的警告信息，同时还可以节省5字节的数据量。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);