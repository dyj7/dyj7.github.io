(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{658:function(t,s,a){"use strict";a.r(s);var n=a(15),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),a("ul",[a("li",[t._v("有两种盒子模型：IE盒模型（border-box）、W3C标准盒模型（content-box）")]),t._v(" "),a("li",[t._v("盒模型：分为内容（content）、填充（padding）、边框（border）、边界（margin）四个部分")]),t._v(" "),a("li",[t._v("IE盒模型和W3C标准盒模型的区别：\n"),a("ul",[a("li",[t._v("W3C标准盒模型：属性width，height只包含内容content，不包含border和padding")]),t._v(" "),a("li",[t._v("IE盒模型：属性width，height包含content、border和padding，指的是content+padding+border。")])])]),t._v(" "),a("li",[t._v("可以通过修改元素的box-sizing属性来改变元素的盒模型")])]),t._v(" "),a("h2",{attrs:{id:"css-选择符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-选择符"}},[t._v("#")]),t._v(" CSS 选择符")]),t._v(" "),a("ul",[a("li",[t._v("id选择器（#myid）")]),t._v(" "),a("li",[t._v("类选择器（.myclassname）")]),t._v(" "),a("li",[t._v("标签选择器（div,h1,p）")]),t._v(" "),a("li",[t._v("后代选择器（h1 p）")]),t._v(" "),a("li",[t._v("相邻后代选择器（子）选择器（ul>li）")]),t._v(" "),a("li",[t._v("兄弟选择器（li~a）")]),t._v(" "),a("li",[t._v("相邻兄弟选择器（li+a）")]),t._v(" "),a("li",[t._v('属性选择器（a[rel="external"]）')]),t._v(" "),a("li",[t._v("伪类选择器（a:hover,li:nth-child）")]),t._v(" "),a("li",[t._v("伪元素选择器（::before、::after）")]),t._v(" "),a("li",[t._v("通配符选择器（*）")])]),t._v(" "),a("h2",{attrs:{id:"伪类与伪元素的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类与伪元素的区别"}},[t._v("#")]),t._v(" 伪类与伪元素的区别")]),t._v(" "),a("ul",[a("li",[t._v("伪类和伪元素是用来修饰不在文档树中的部分。")]),t._v(" "),a("li",[t._v("伪类用于当已有的元素处于某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的。")]),t._v(" "),a("li",[t._v("伪元素用于创建一些不在文档树中的元素，并为其添加样式。")])]),t._v(" "),a("h2",{attrs:{id:"css-中哪些属性可以继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-中哪些属性可以继承"}},[t._v("#")]),t._v(" CSS 中哪些属性可以继承？")]),t._v(" "),a("ul",[a("li",[t._v("字体相关的属性，font-size和font-weight等。文本相关的属性，color和text-align等。\n表格的一些布局属性、列表属性如list-style等。还有光标属性cursor、元素可见性visibility。")]),t._v(" "),a("li",[t._v("当一个属性不是继承属性的时候，可以通过将它的值设置为inherit来使它从父元素那获取同名的属性值来继承。")])]),t._v(" "),a("h2",{attrs:{id:"css-优先级算法如何计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-优先级算法如何计算"}},[t._v("#")]),t._v(" CSS 优先级算法如何计算？")]),t._v(" "),a("ul",[a("li",[t._v("选择器的特殊性值分为四个等级，如下：\n"),a("ul",[a("li",[t._v("标签内选择符x,0,0,0")]),t._v(" "),a("li",[t._v("ID选择符0,x,0,0")]),t._v(" "),a("li",[t._v("class选择符/属性选择符/伪类选择符\t0,0,x,0")]),t._v(" "),a("li",[t._v("元素和伪元素选择符0,0,0,x")])])]),t._v(" "),a("li",[t._v("每个等级的初始值为0")]),t._v(" "),a("li",[t._v("每个等级的叠加为选择器出现的次数相加")]),t._v(" "),a("li",[t._v("不可进位，比如0,99,99,99")]),t._v(" "),a("li",[t._v("依次表示为：0,0,0,0")]),t._v(" "),a("li",[t._v("每个等级计数之间没关联")]),t._v(" "),a("li",[t._v("等级判断从左向右，如果某一位数值相同，则判断下一位数值")]),t._v(" "),a("li",[t._v("如果两个优先级相同，则最后出现的优先级高，!important也适用")]),t._v(" "),a("li",[t._v("通配符选择器的特殊性值为：0,0,0,0")]),t._v(" "),a("li",[t._v("继承样式优先级最低，通配符样式优先级高于继承样式")]),t._v(" "),a("li",[t._v("!important（权重），它没有特殊性值，但它的优先级是最高的，为了方便记忆，可以认为它的特殊性值为1,0,0,0,0。")])]),t._v(" "),a("h2",{attrs:{id:"伪类-lvha-的解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类-lvha-的解释"}},[t._v("#")]),t._v(" 伪类 LVHA 的解释?")]),t._v(" "),a("ul",[a("li",[t._v("a标签有四种状态：链接访问前、链接访问后、鼠标滑过、激活，分别对应四种伪类:link、:visited、:hover、:active；")])]),t._v(" "),a("h2",{attrs:{id:"如何居中-div"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何居中-div"}},[t._v("#")]),t._v(" 如何居中 div？")]),t._v(" "),a("ul",[a("li",[t._v("对于宽高固定的元素\n"),a("ul",[a("li",[t._v("以利用margin:0 auto来实现元素的水平居中。")]),t._v(" "),a("li",[t._v("利用绝对定位，设置四个方向的值都为0，并将margin设置为auto，由于宽高固定，因此对应方向实现平分，可以实现水平和垂直方向上的居中。")]),t._v(" "),a("li",[t._v("利用绝对定位，先将元素的左上角通过top:50%和left:50%定位到页面的中心，然后再通过margin负值来调整元素的中心点到页面的中心。")]),t._v(" "),a("li",[t._v("利用绝对定位，先将元素的左上角通过top:50%和left:50%定位到页面的中心，然后再通过translate来调整元素的中心点到页面的中心。")]),t._v(" "),a("li",[t._v("使用flex布局，通过align-items:center和justify-content:center设置容器的垂直和水平方向上为居中对齐，然后它的子元素也可以实现垂直和水平的居中。")])])]),t._v(" "),a("li",[t._v("对于宽高不定的元素，上面的后面两种方法，可以实现元素的垂直和水平的居中。")])]),t._v(" "),a("h2",{attrs:{id:"display-有哪些值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display-有哪些值"}},[t._v("#")]),t._v(" display 有哪些值？")]),t._v(" "),a("ul",[a("li",[t._v("inline\t行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。")]),t._v(" "),a("li",[t._v("block\t块类型。默认宽度为父元素宽度，可设置宽高，换行显示。")]),t._v(" "),a("li",[t._v("inline-block 默认宽度为内容宽度，可以设置宽高，同行显示。")]),t._v(" "),a("li",[t._v("none\t元素不显示，并从文档流中移除。")]),t._v(" "),a("li",[t._v("list-item\t像块类型元素一样显示，并添加样式列表标记。")]),t._v(" "),a("li",[t._v("table\t此元素会作为块级表格来显示。")]),t._v(" "),a("li",[t._v("inherit\t规定应该从父元素继承display属性的值。")]),t._v(" "),a("li",[t._v("flex  弹性布局")]),t._v(" "),a("li",[t._v("grid  栅格布局")]),t._v(" "),a("li",[t._v("contents  设置了display: contents的元素本身不会被渲染，但是其子元素能够正常被渲染。")])]),t._v(" "),a("h2",{attrs:{id:"position-的值-relative-和-absolute-定位原点是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position-的值-relative-和-absolute-定位原点是"}},[t._v("#")]),t._v(" position 的值 relative 和 absolute 定位原点是？")]),t._v(" "),a("ul",[a("li",[t._v("absolute：生成绝对定位的元素，相对于值不为static的第一个父元素的padding box进行定位，也可以理解为离自己这一级元素最近的一级position设置为absolute或者relative的父元素的padding box的左上角为原点的。")]),t._v(" "),a("li",[t._v("fixed：生成绝对定位的元素，相对于浏览器窗口进行定位。")]),t._v(" "),a("li",[t._v("relative：生成相对定位的元素，相对于其元素本身所在正常位置进行定位。")]),t._v(" "),a("li",[t._v("static：默认值。没有定位，元素出现在正常的流中（忽略top,bottom,left,right,z-index声明）。")]),t._v(" "),a("li",[t._v("inherit：规定从父元素继承position属性的值。")]),t._v(" "),a("li",[t._v("relative定位的元素，是相对于元素本身的正常位置来进行定位的。")]),t._v(" "),a("li",[t._v("absolute定位的元素，是相对于它的第一个position值不为static的祖先元素的padding box来进行定位的。首先需要找到绝对定位元素的一个position的值不为static的祖先元素，然后相对于这个祖先元素的padding box来定位，也就是说在计算定位距离的时候，padding的值也要算进去。")])]),t._v(" "),a("h2",{attrs:{id:"css3-有哪些新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3-有哪些新特性"}},[t._v("#")]),t._v(" CSS3 有哪些新特性")]),t._v(" "),a("ul",[a("li",[t._v("新增各种CSS选择器\t（:not(.input)：所有class不是“input”的节点）")]),t._v(" "),a("li",[t._v("圆角\t\t（border-radius:8px）")]),t._v(" "),a("li",[t._v("多列布局\t（multi-column layout）")]),t._v(" "),a("li",[t._v("阴影和反射\t（Shadow\\Reflect）")]),t._v(" "),a("li",[t._v("文字特效\t\t（text-shadow）")]),t._v(" "),a("li",[t._v("文字渲染\t\t（Text-decoration）")]),t._v(" "),a("li",[t._v("线性渐变\t\t（gradient）")]),t._v(" "),a("li",[t._v("旋转\t\t\t（transform）")]),t._v(" "),a("li",[t._v("缩放，定位，倾斜，动画，多背景")]),t._v(" "),a("li",[t._v("例如：transform:\\scale(0.85,0.90)\\translate(0px,-30px)\\skew(-9deg,0deg)\\Animation:")])]),t._v(" "),a("h2",{attrs:{id:"flex-box-弹性盒布局模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-box-弹性盒布局模型"}},[t._v("#")]),t._v(" Flex box（弹性盒布局模型）")]),t._v(" "),a("ul",[a("li",[t._v("设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。")]),t._v(" "),a("li",[t._v("flex-direction属性决定主轴的方向（即项目的排列方向）。")]),t._v(" "),a("li",[t._v("flex-wrap属性定义，如果一条轴线排不下，如何换行。")]),t._v(" "),a("li",[t._v("flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。")]),t._v(" "),a("li",[t._v("justify-content属性定义了项目在主轴上的对齐方式。")]),t._v(" "),a("li",[t._v("align-items属性定义项目在交叉轴上如何对齐。")]),t._v(" "),a("li",[t._v("align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")])]),t._v(" "),a("h2",{attrs:{id:"css浏览器的兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css浏览器的兼容性"}},[t._v("#")]),t._v(" CSS浏览器的兼容性")]),t._v(" "),a("ul",[a("li",[t._v("浏览器默认的margin和padding不同，加一个全局的*{margin:0;padding:0;}来统一。")]),t._v(" "),a("li",[t._v("Chrome中文界面下默认会将小于12px的文本强制按照12px显示，-webkit-transform:scale(0.5);")])]),t._v(" "),a("h2",{attrs:{id:"width-auto-和-width-100-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#width-auto-和-width-100-的区别"}},[t._v("#")]),t._v(" width:auto 和 width:100%的区别")]),t._v(" "),a("ul",[a("li",[t._v("width:100%会使元素box的宽度等于父元素的content box的宽度。")]),t._v(" "),a("li",[t._v("width:auto会使元素撑满整个父元素，margin、border、padding、content区域会自动分配水平空间。")])]),t._v(" "),a("h2",{attrs:{id:"base64-编码的优点和缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base64-编码的优点和缺点"}},[t._v("#")]),t._v(" base64 编码的优点和缺点")]),t._v(" "),a("ul",[a("li",[t._v("base64编码是一种图片处理格式，通过特定的算法将图片编码成一长串字符串，在页面上显示的时候，可以用该字符串来代替图片的url属性。")]),t._v(" "),a("li",[t._v("使用base64的优点是：减少一个图片的HTTP请求")]),t._v(" "),a("li",[t._v("使用base64的缺点是：\n"),a("ul",[a("li",[t._v("根据base64的编码原理，编码后的大小会比原文件大小大1/3，如果把大图片编码到html/css中，不仅会造成文件体积的增加，影响文件的加载速度，还会增加浏览器对html或css文件解析渲染的时间。")]),t._v(" "),a("li",[t._v("使用base64无法直接缓存，要缓存只能缓存包含base64的文件，比如HTML或者CSS，这相比域直接缓存图片的效果要差很多。")]),t._v(" "),a("li",[t._v("兼容性的问题，ie8以前的浏览器不支持。")])])]),t._v(" "),a("li",[t._v("一般一些网站的小图标可以使用base64图片来引入。")])]),t._v(" "),a("h2",{attrs:{id:"display-、-position-和-float-的相互关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display-、-position-和-float-的相互关系"}},[t._v("#")]),t._v(" 'display'、'position'和'float'的相互关系")]),t._v(" "),a("ul",[a("li",[t._v("首先判断display属性是否为none，如果为none，则position和float属性的值不影响元素最后的表现。")]),t._v(" "),a("li",[t._v("然后判断position的值是否为absolute或者fixed，如果是，则float属性失效，并且display的值应该被设置为table或者block，具体转换需要看初始转换值。")]),t._v(" "),a("li",[t._v("如果position的值不为absolute或者fixed，则判断float属性的值是否为none，如果不是，则display的值则按上面的规则转换。注意，如果position的值为relative并且float属性的值存在，则relative相对于浮动后的最终位置定位。")]),t._v(" "),a("li",[t._v("如果float的值为none，则判断元素是否为根元素，如果是根元素则display属性按照上面的规则转换，如果不是，则保持指定的display属性值不变。")])]),t._v(" "),a("h2",{attrs:{id:"margin合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#margin合并"}},[t._v("#")]),t._v(" margin合并")]),t._v(" "),a("ul",[a("li",[t._v("块级元素的上外边距（margin-top）与下外边距（margin-bottom）有时会合并为单个外边距，这样的现象称为“margin合并”。")]),t._v(" "),a("li",[t._v("相邻兄弟元素margin合并:\n"),a("ul",[a("li",[t._v("设置任意块级元素"),a("code",[t._v("display: inline-block")])]),t._v(" "),a("li",[t._v("元素外嵌套一层"),a("code",[t._v("div")]),t._v("并创建BFC")]),t._v(" "),a("li",[t._v("浮动或者定位")])])]),t._v(" "),a("li",[t._v("父级和第一个/最后一个子元素的margin合并\n"),a("ul",[a("li",[t._v("父元素设置为块状格式化上下文元素")]),t._v(" "),a("li",[t._v("父元素设置border-top/bottom值/padding-top/bottom值")])])]),t._v(" "),a("li",[t._v("空块级元素的margin合并\n"),a("ul",[a("li",[t._v("设置垂直方向的border/padding")])])])]),t._v(" "),a("h2",{attrs:{id:"对-bfc-规范-块级格式化上下文-block-formatting-context-的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对-bfc-规范-块级格式化上下文-block-formatting-context-的理解"}},[t._v("#")]),t._v(" 对 BFC 规范（块级格式化上下文：block formatting context）的理解？")]),t._v(" "),a("ul",[a("li",[t._v("BFC是一个独立的布局环境，可以理解为一个容器，一个元素形成了BFC之后，那么它内部元素产生的布局不会影响到外部元素，外部元素的布局也不会影响到BFC中的内部元素。一个BFC就像是一个隔离区域，和其他区域互不影响。")]),t._v(" "),a("li",[t._v("如果一个元素符合触发BFC的条件，则BFC中的元素布局不受外部影响。")]),t._v(" "),a("li",[t._v("创建BFC\n"),a("ul",[a("li",[t._v("根元素或包含根元素的元素")]),t._v(" "),a("li",[t._v("浮动元素float＝left|right或inherit（≠none）")]),t._v(" "),a("li",[t._v("绝对定位元素position＝absolute或fixed")]),t._v(" "),a("li",[t._v("display＝inline-block|flex|inline-flex|table-cell或table-caption")]),t._v(" "),a("li",[t._v("overflow＝hidden|auto或scroll(≠visible)")])])])]),t._v(" "),a("h2",{attrs:{id:"ifc-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ifc-是什么"}},[t._v("#")]),t._v(" IFC 是什么")]),t._v(" "),a("ul",[a("li",[t._v("IFC指的是行级格式化上下文:")]),t._v(" "),a("li",[t._v("行级上下文内部的盒子会在水平方向，一个接一个地放置。")]),t._v(" "),a("li",[t._v("当一行不够的时候会自动切换到下一行。")]),t._v(" "),a("li",[t._v("行级上下文的高度由内部最高的内联盒子的高度决定。")])]),t._v(" "),a("h2",{attrs:{id:"浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮动"}},[t._v("#")]),t._v(" 浮动")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浮动元素可以左右移动，直到遇到另一个浮动元素或者遇到它外边缘的包含框。浮动框不属于文档流中的普通流，当元素浮动之后，不会影响块级元素的布局，只会影响内联元素布局。此时文档流中的普通流就会表现得该浮动框不存在一样的布局模式。当包含框的高度小于浮动框的时候，此时就会出现“高度塌陷”。")])]),t._v(" "),a("li",[a("p",[t._v("清除浮动")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clear::after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 也可以是'block'，或者是'list-item' */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"css-优化、提高性能的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-优化、提高性能的方法"}},[t._v("#")]),t._v(" CSS 优化、提高性能的方法")]),t._v(" "),a("h3",{attrs:{id:"加载性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载性能"}},[t._v("#")]),t._v(" 加载性能：")]),t._v(" "),a("ul",[a("li",[t._v("css压缩：将写好的css进行打包压缩，可以减少很多的体积。")]),t._v(" "),a("li",[t._v("css单一样式：当需要下边距和左边距的时候，很多时候选择:margin:top 0 bottom 0;但margin-bottom:bottom;margin-left:left;执行的效率更高。")]),t._v(" "),a("li",[t._v("减少使用@import,而建议使用link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。")])]),t._v(" "),a("h3",{attrs:{id:"渲染性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染性能"}},[t._v("#")]),t._v(" 渲染性能：")]),t._v(" "),a("ul",[a("li",[t._v("慎重使用高性能属性：浮动、定位。")]),t._v(" "),a("li",[t._v("尽量减少页面重排、重绘。")]),t._v(" "),a("li",[t._v("去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少css文档体积。")]),t._v(" "),a("li",[t._v("属性值为0时，不加单位。")]),t._v(" "),a("li",[t._v("属性值为浮动小数0.**，可以省略小数点之前的0。")]),t._v(" "),a("li",[t._v("标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。")]),t._v(" "),a("li",[t._v("不使用@import前缀，它会影响css的加载速度。")]),t._v(" "),a("li",[t._v("选择器优化嵌套，尽量避免层级过深。")]),t._v(" "),a("li",[t._v("css雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清\n楚，再使用。")]),t._v(" "),a("li",[t._v("正确使用display的属性，由于display的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。")]),t._v(" "),a("li",[t._v("不滥用web字体。对于中文网站来说WebFonts可能很陌生，国外却很流行。web fonts通常体积庞大，而且一些浏\n览器在下载web fonts时会阻塞页面渲染损伤性能。")])]),t._v(" "),a("h3",{attrs:{id:"可维护性、健壮性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可维护性、健壮性"}},[t._v("#")]),t._v(" 可维护性、健壮性：")]),t._v(" "),a("ul",[a("li",[t._v("将具有相同属性的样式抽离出来，整合并通过class在页面中进行使用，提高css的可维护性。")]),t._v(" "),a("li",[t._v("样式与内容分离：将css代码定义到外部css中。")])]),t._v(" "),a("h2",{attrs:{id:"浏览器是怎样解析-css-选择器的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是怎样解析-css-选择器的"}},[t._v("#")]),t._v(" 浏览器是怎样解析 CSS 选择器的？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("样式系统从关键选择器开始匹配，然后左移查找规则选择器的祖先元素。只要选择器的子树一直在工作，样式系统就会持续左移，直\n到和规则匹配，或者是因为不匹配而放弃该规则。")])]),t._v(" "),a("li",[a("p",[t._v("如果采用从左至右的方式读取CSS规则，那么大多数规则读到最后（最右）才会发现是不匹配的，会费时耗能；而如果采取从右向左的方式，那么只要发现最右边选择器不匹配，就可以直接舍弃，避免许多无效匹配。")])])]),t._v(" "),a("h2",{attrs:{id:"css3-的-all-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3-的-all-属性"}},[t._v("#")]),t._v(" css3 的 all 属性")]),t._v(" "),a("ul",[a("li",[t._v("all属性实际上是所有CSS属性的缩写，表示，所有的CSS属性都怎样怎样，但是，不包括unicode-bidi和direction这两个CSS属性。支持三个CSS通用属性值，initial,inherit,unset。")]),t._v(" "),a("li",[t._v("initial是初始值的意思，也就是该元素元素都除了unicode-bidi和direction以外的CSS属性都使用属性的默认初始值。")]),t._v(" "),a("li",[t._v("inherit是继承的意思，也就是该元素除了unicode-bidi和direction以外的CSS属性都继承父元素的属性值。")]),t._v(" "),a("li",[t._v("unset是取消设置的意思，也就是当前元素浏览器或用户设置的CSS忽略，然后如果是具有继承特性的CSS，如color，则使用继承值；如果是没有继承特性的CSS属性，如background-color，则使用初始值。")])]),t._v(" "),a("h2",{attrs:{id:"什么是响应式设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是响应式设计"}},[t._v("#")]),t._v(" 什么是响应式设计")]),t._v(" "),a("ul",[a("li",[t._v("响应式网站设计是一个网站能够兼容多个终端，而不是为每一个终端做一个特定的版本。基本原理是通过媒体查询检测不同的设备屏幕尺寸做处理。页面头部必须有meta声明的viewport。")])]),t._v(" "),a("h2",{attrs:{id:"怎么让-chrome-支持小于-12px-的文字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么让-chrome-支持小于-12px-的文字"}},[t._v("#")]),t._v(" 怎么让 Chrome 支持小于 12px 的文字")]),t._v(" "),a("ul",[a("li",[t._v("使用css3的transform缩放属性-webkit-transform:scale(0.5);注意-webkit-transform:scale(0.75);收缩的是整个元素的大小，这时候，如果是内联元素，必须要将内联元素转换成块元素.")]),t._v(" "),a("li",[t._v("使用图片")])]),t._v(" "),a("h2",{attrs:{id:"设备像素、css-像素、设备独立像素、dpr、ppi-之间的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设备像素、css-像素、设备独立像素、dpr、ppi-之间的区别"}},[t._v("#")]),t._v(" 设备像素、css 像素、设备独立像素、dpr、ppi 之间的区别")]),t._v(" "),a("ul",[a("li",[t._v("设备像素指的是物理像素，一般手机的分辨率指的就是设备像素，一个设备的设备像素是不可变的。")]),t._v(" "),a("li",[t._v("css像素和设备独立像素是等价的，不管在何种分辨率的设备上，css像素的大小应该是一致的，css像素是一个相对单位，它是相对于设备像素的，一个css像素的大小取决于页面缩放程度和dpr的大小。")]),t._v(" "),a("li",[t._v("dpr指的是设备像素和设备独立像素的比值，一般的pc屏幕，dpr=1。在iphone4时，苹果推出了retina屏幕，它的dpr为2。屏幕的缩放会改变dpr的值。")]),t._v(" "),a("li",[t._v("ppi指的是每英寸的物理像素的密度，ppi越大，屏幕的分辨率越大。")])]),t._v(" "),a("h2",{attrs:{id:"去除-inline-block-元素间间距"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除-inline-block-元素间间距"}},[t._v("#")]),t._v(" 去除 inline-block 元素间间距")]),t._v(" "),a("ul",[a("li",[t._v("移除空格、使用margin负值、使用font-size:0、letter-spacing、word-spacing")])]),t._v(" "),a("h2",{attrs:{id:"overflow-scroll-时不能平滑滚动的问题怎么处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overflow-scroll-时不能平滑滚动的问题怎么处理"}},[t._v("#")]),t._v(" overflow:scroll 时不能平滑滚动的问题怎么处理？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-webkit-overflow-scrolling:touch")]),t._v(" 这行代码会启用硬件加速特性，使滑动流畅。")])]),t._v(" "),a("h2",{attrs:{id:"有一个高度自适应的-div-里面有两个-div-一个高度-100px-希望另一个填满剩下的高度。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有一个高度自适应的-div-里面有两个-div-一个高度-100px-希望另一个填满剩下的高度。"}},[t._v("#")]),t._v(" 有一个高度自适应的 div，里面有两个 div，一个高度 100px，希望另一个填满剩下的高度。")]),t._v(" "),a("ul",[a("li",[t._v("外层div使用"),a("code",[t._v("position：relative")]),t._v("；高度要求自适应的div使用"),a("code",[t._v("position:absolute;top:100px;bottom:0;left:0;right:0")]),t._v(";")]),t._v(" "),a("li",[t._v("使用flex布局，设置主轴为竖轴"),a("code",[t._v("flex-direction: column;")]),t._v("，第二个div的"),a("code",[t._v("flex-grow为1")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"什么是-cookie-隔离-或者说-请求资源的时候不要让它带-cookie-怎么做"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cookie-隔离-或者说-请求资源的时候不要让它带-cookie-怎么做"}},[t._v("#")]),t._v(" 什么是 Cookie 隔离？（或者说：请求资源的时候不要让它带 cookie 怎么做）")]),t._v(" "),a("ul",[a("li",[t._v("网站向服务器请求的时候，会自动带上cookie这样增加表头信息量，使请求变慢。")]),t._v(" "),a("li",[t._v("如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，所以不如隔离开，静态资源放CDN。")]),t._v(" "),a("li",[t._v("因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。")]),t._v(" "),a("li",[t._v("同时这种方式不会将cookie传入WebServer，也减少了WebServer对cookie的处理分析环节，提高了webserver的http请求的解析速度。")])]),t._v(" "),a("h2",{attrs:{id:"画一条-0-5px-的线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画一条-0-5px-的线"}},[t._v("#")]),t._v(" 画一条 0.5px 的线")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".line")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scaleY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50% 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"animation、transition、transform的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#animation、transition、transform的区别"}},[t._v("#")]),t._v(" animation、transition、transform的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("transform用于元素旋转、缩放、移动、倾斜等效果 "),a("code",[t._v("scale()、rotate()、translate()")])])]),t._v(" "),a("li",[a("p",[t._v("transition用于较为单一的动画,transition关注的是CSS property的变化，property值和时间的关系是一个三次贝塞尔曲线。")]),t._v(" "),a("ul",[a("li",[t._v("transition需要事件触发，所以没法在网页加载时自动发生。")]),t._v(" "),a("li",[t._v("transition是一次性的，不能重复发生，除非一再触发。")]),t._v(" "),a("li",[t._v("transition只能定义开始状态和结束状态，不能定义中间状态，也就是说只有两个状态。")]),t._v(" "),a("li",[t._v("一条transition规则，只能定义一个属性的变化，不能涉及多个属性。")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img:hover")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s 1s height ease"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 等价于 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-timing-function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ease"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("animation一般用于较为复杂、有中间态的动画，animation作用于元素本身而不是样式属性，可以使用关键帧的概念，应该说可以实现更自由的动画效果。")])])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s rainbow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" rainbow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("0%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #c00"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("50%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("100%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yellowgreen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"替换元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换元素"}},[t._v("#")]),t._v(" 替换元素")]),t._v(" "),a("ul",[a("li",[t._v("通过修改某个属性值呈现的内容就可以被替换的元素就称为“替换元素” "),a("code",[t._v("<img>、<video>、<iframe>、<textarea>、<input>、<select>")])])]),t._v(" "),a("h2",{attrs:{id:"margin-auto-的填充规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#margin-auto-的填充规则"}},[t._v("#")]),t._v(" margin:auto 的填充规则")]),t._v(" "),a("ul",[a("li",[t._v("触发margin: auto计算有一个前提条件，就是width或height为auto时，元素是具有对应方向的自动填充特性的。")]),t._v(" "),a("li",[t._v("如果一侧定值，一侧auto，则auto为剩余空间大小。")]),t._v(" "),a("li",[t._v("如果两侧均是auto，则平分剩余空间。")])]),t._v(" "),a("h2",{attrs:{id:"border-的特殊性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#border-的特殊性"}},[t._v("#")]),t._v(" border 的特殊性")]),t._v(" "),a("ul",[a("li",[t._v("border-width却不支持百分比。")]),t._v(" "),a("li",[t._v("border-style的默认值是none")]),t._v(" "),a("li",[t._v("border-color默认颜色就是color色值。")]),t._v(" "),a("li",[t._v("border-style:double的表现规则：双线宽度永远相等，中间间隔±1。")])]),t._v(" "),a("h2",{attrs:{id:"实现单行-多行文本溢出的省略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现单行-多行文本溢出的省略"}},[t._v("#")]),t._v(" 实现单行／多行文本溢出的省略（...）？")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*单行文本溢出*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ellipsis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不换行 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"常见的元素隐藏方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的元素隐藏方式"}},[t._v("#")]),t._v(" 常见的元素隐藏方式？")]),t._v(" "),a("ul",[a("li",[t._v("使用 display:none;隐藏元素，渲染树不会包含该渲染对象，因此该元素不会在页面中占据位置，也不会响应绑定的监听事件。")]),t._v(" "),a("li",[t._v("使用 visibility:hidden;隐藏元素。元素在页面中仍占据空间，但是不会响应绑定的监听事件。")]),t._v(" "),a("li",[t._v("使用 opacity:0;将元素的透明度设置为 0，以此来实现元素的隐藏。元素在页面中仍然占据空间，并且能够响应元素绑定的监听事件。")]),t._v(" "),a("li",[t._v("通过使用绝对定位将元素移除可视区域内，以此来实现元素的隐藏。")]),t._v(" "),a("li",[t._v("通过 z-index 负值，来使其他元素遮盖住该元素，以此来实现隐藏。")]),t._v(" "),a("li",[t._v("通过 clip/clip-path 元素裁剪的方法来实现元素的隐藏，这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")]),t._v(" "),a("li",[t._v("通过 transform:scale(0,0)来将元素缩放为 0，以此来实现元素的隐藏。这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")])]),t._v(" "),a("h2",{attrs:{id:"实现一个三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现一个三角形"}},[t._v("#")]),t._v(" 实现一个三角形")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*三角形的实现原理是利用了元素边框连接处的等分原理。*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".triangle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomato transparent transparent transparent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"css-中不同属性设置为百分比-时对应的计算基准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-中不同属性设置为百分比-时对应的计算基准"}},[t._v("#")]),t._v(" CSS 中不同属性设置为百分比%时对应的计算基准")]),t._v(" "),a("ul",[a("li",[t._v("元素的 position 为 relative 和 absolute 时，top和bottom、left和right基准分别为包含块的 height、width")]),t._v(" "),a("li",[t._v("元素的 position 为 fixed 时，top和bottom、left和right基准分别为初始包含块（也就是视口）的 height、width，移动设备较为复杂，基准为 Layout viewport 的 height、width")]),t._v(" "),a("li",[t._v("元素的 height 和 width 设置为百分比时，基准分别为包含块的 height 和 width")]),t._v(" "),a("li",[t._v("元素的 margin 和 padding 设置为百分比时，基准为包含块的 width（易错）")]),t._v(" "),a("li",[t._v("元素的 border-width，不支持百分比")]),t._v(" "),a("li",[t._v("元素的 text-indent，基准为包含块的 width")]),t._v(" "),a("li",[t._v("元素的 border-radius，基准为分别为自身的height、width")]),t._v(" "),a("li",[t._v("元素的 background-size，基准为分别为自身的height、width")]),t._v(" "),a("li",[t._v("元素的 translateX、translateY，基准为分别为自身的height、width")]),t._v(" "),a("li",[t._v("元素的 line-height，基准为自身的 font-size")]),t._v(" "),a("li",[t._v("元素的 font-size，基准为父元素字体")])]),t._v(" "),a("h2",{attrs:{id:"less相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#less相关"}},[t._v("#")]),t._v(" Less相关")]),t._v(" "),a("h3",{attrs:{id:"变量-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量-variables"}},[t._v("#")]),t._v(" 变量（Variables）")]),t._v(" "),a("div",{staticClass:"language-less line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v(" 10px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@width")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 10px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"混合-mixins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混合-mixins"}},[t._v("#")]),t._v(" 混合（Mixins）")]),t._v(" "),a("div",{staticClass:"language-less line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".bordered")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dotted 1px black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid 2px black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#menu a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token mixin-usage function"}},[t._v(".bordered")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".post a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token mixin-usage function"}},[t._v(".bordered")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h3",{attrs:{id:"嵌套-nesting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套-nesting"}},[t._v("#")]),t._v(" 嵌套（Nesting）")]),t._v(" "),a("div",{staticClass:"language-less line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".navigation")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".logo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);